precision mediump float;

attribute vec2 vertPos;

uniform ivec4 squareType;
uniform mat4 modelMat;
uniform mat4 viewMat;
uniform mat4 projMat;
uniform int squareState;
uniform float t;

varying vec2 squarePos;

float circularIn(float t) {
    return 1.0 - t * t;
}

float softEdge(float t) {
//   return 1.0 - t * t * t;

    float r = t < 0.45 ? 1.0 : t > 0.55 ? 0.0 : 1.0 - (t - 0.45) / 0.1;
    return r * r;

    // return t > 0.5 ? 0.0 : 1.0;
}

export void vertex() {
    gl_Position = projMat * viewMat * modelMat * vec4(vertPos, 0, 1);
    squarePos = vertPos;
}

export void playerFrag() {
    vec2 offset = squarePos - 0.5;

    float alpha = softEdge(distance(vec2(0, 0), offset / 0.1));

    gl_FragColor = mix(vec4(1, 0, 0, alpha), vec4(0, 1, 0, alpha), t);
}

export void enemyFrag() {
    vec2 offset = squarePos - 0.5;

    float alpha = softEdge(distance(vec2(0, 0), offset / 0.1));

    gl_FragColor = vec4(1, 0, 0, alpha);
}

export void bulletFrag() {
    vec2 offset = squarePos - 0.5;

    float alpha = softEdge(distance(vec2(0, 0), offset / 0.1));

    gl_FragColor = vec4(0, 0, 0, alpha);
}

export void hallFrag() {
    vec4 wall = vec4(0, 0, 0, 1);
    vec4 hall = vec4(1, 1, 1, 1);


    if (squareState == 0) {
        hall = vec4(0, 0.5, 0, 1);
   } else if (squareState == 1) {
        if ((mod(squarePos.x * 10.0, 2.0) > 1.0 && mod(squarePos.y * 10.0, 2.0) > 1.0) || (mod(squarePos.x * 10.0, 2.0) < 1.0 && mod(squarePos.y * 10.0, 2.0) < 1.0)) {
            hall = vec4(1, 1, 1, 1);
        } else {
            hall = vec4(0, 0, 0, 1);
        }

        // hall = vec4(0.5, 0, 0, 1);
    } else if (squareState == 2) {
        hall = vec4(0.5, 0.5, 0.5, 1);
    }

    vec4 color = mix(vec4(0.5, 0.5, 0.5, 1), hall, 1.0 - circularIn(squareState < 2 ? 1.0 : t));
    if (squareType[0] == 0 && squarePos.x < 0.01) {
        color = wall;
    }
    if (squareType[2] == 0 && squarePos.x > 0.99) {
        color = wall;
    }
    if (squareType[1] == 0 && squarePos.y < 0.01) {
        color = wall;
    }
    if (squareType[3] == 0 && squarePos.y > 0.99) {
        color = wall;
    }

    gl_FragColor = color;
}