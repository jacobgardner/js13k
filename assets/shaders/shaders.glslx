precision mediump float;

attribute vec2 vertPos;

uniform ivec4 squareType;
uniform mat4 modelMat;
uniform mat4 viewMat;
uniform mat4 projMat;
uniform int squareState;

varying vec2 squarePos;

float circularIn(float t) {
  return 1.0 - t * t * t;
}

export void vertex() {
    gl_Position = projMat * viewMat * modelMat * vec4(vertPos, 0, 1);
    squarePos = vertPos;
}

export void playerFrag() {
    vec2 offset = squarePos - 0.5;

    float alpha = circularIn(distance(vec2(0, 0), offset / 0.4));

    gl_FragColor = vec4(1, 0, 0, alpha);
    // if (dot(offset, offset) < 0.1) {
    //     gl_FragColor = vec4(1, 0, 0, 1);
    // } else {
    //     gl_FragColor = vec4(1, 0, 0, 0);
    // }

}

export void hallFrag() {
    vec4 wall = vec4(0, 0, 0, 1);
    vec4 hall = vec4(1, 1, 1, 1);

    if (squareState == 0) {
        hall = vec4(0, 0.5, 0, 1);
    } else if (squareState == 1) {
        hall = vec4(0.5, 0, 0, 1);
    } else if (squareState == 2) {
        hall = vec4(0.5, 0.5, 0.5, 1);
    }

    vec4 color = hall;
    if (squareType[0] == 0 && squarePos.x < 0.1) {
        color = wall;
    }
    if (squareType[2] == 0 && squarePos.x > 0.9) {
        color = wall;
    }
    if (squareType[1] == 0 && squarePos.y < 0.1) {
        color = wall;
    }
    if (squareType[3] == 0 && squarePos.y > 0.9) {
        color = wall;
    }

    gl_FragColor = color;
}